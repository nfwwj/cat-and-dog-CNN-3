# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dsBAQig4Wv-boXt1mrh4jRsu343Pr0hG
"""

import streamlit as st
from tensorflow.keras.models import Sequential, model_from_json
import numpy as np
from tensorflow.keras.preprocessing import image
from PIL import UnidentifiedImageError
from PIL import Image
import tensorflow as tf

json_file = open('catanddog.json', 'r')
loaded_model_json = json_file.read()
json_file.close()
loaded_model = model_from_json(loaded_model_json)

loaded_model.load_weights("catanddog.h5")
# print("Loaded model from disk")

st.title('Cats and Dogs Classification Using CNN')

num_classes = ['Cat','Dog']


ImagePath = st.file_uploader("Choose a file")

# ImagePath = st.file_uploader("Choose a file")

if ImagePath is not None:

    try:
        image_ = Image.open(ImagePath)

        st.image(image_, width=250)

    except UnidentifiedImageError:
        st.write('Input Valid File Format !!!  [ jpeg, jpg, png only this format is supported ! ]')


try:
    if st.button('Predict'):
        test_image = tf.keras.utils.load_img(ImagePath,
                                              color_mode='rgb',
                                              target_size=(224, 224)) #edit to model input size
        
        test_image = tf.keras.utils.img_to_array(test_image)

        test_image = np.expand_dims(test_image, axis=0)

        

        logits = loaded_model(test_image)
        
        softmax = tf.nn.softmax(logits)

        predict_output = tf.argmax(logits, -1).numpy()
        classes = ['cat','dog']
        st.header(classes[predict_output[0]])

        predicted_class = classes[predict_output[0]]
        # Get the probability of the predicted class
        probability = softmax.numpy()[0][predict_output[0]]
        st.header(f"Probability of {predicted_class}: {probability:.4f}")
        

except TypeError:
    st.header('Please Upload Your File !!!')

except UnidentifiedImageError:
    st.header('Input Valid File !!!')

